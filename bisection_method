import numpy as np 
import matplotlib.pyplot as plt 

def bisection(f,a,b,nmax,eps):
    fa=f(a)
    fb=f(b)
    if np.sign(fa)==np.sign(fb):
        print(a,b,fa,fb)
        print("function has same signs at a and b")
        return
    
    error=b-a
    for n in range(0,nmax+1):
        error=error/2
        c=a+error
        fc=f(c)
        print(n,c,fc,error)
        
        if np.abs(error)<eps:
            print("convergence")
            return
        if np.sign(fa) != np.sign(fb):
            b=c
            fb=fc
        else:
            a=c
            fa=fc
            
def myfunction(x):
    return x**3-3*x+1
    
    
bisection(myfunction,0,1,3,0.008)
bisection(myfunction,0,1,5,0.008)
bisection(myfunction,0,1,7,0.008)
bisection(myfunction,0,1,9,0.008)

def myfunction2(x):
    return x**3-2*np.sin(x)
    
bisection(myfunction2,0.5,2,5,0.008)
